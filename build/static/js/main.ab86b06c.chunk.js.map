{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/TaskView.js","components/AddTask.js","components/LoadingScreen.js","components/DayPopup.js","components/Calendar.js","components/Authentication.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClickFunction","onClick","style","backgroundColor","className","Header","buttonColorDecider","toggleAdd","fontStyle","fontFamily","priorityColor","task","Number","priority","String","eventColor","Task","onDelete","dragStart","dragDrop","onDropFunc","useState","animation","setAnimation","reminder","draggable","onDragStart","e","onDragOver","stopPropagation","preventDefault","onDrop","onDragEnd","cursor","setTimeout","day","slice","formatISO9075","parseISO","isoEventEndTime","representation","additionalRemarks","Tasks","tasks","toggleManual","onUpdate","textFilter","datetimeFilter","viewingOptions","setStartZone","currentTarget","querySelector","textContent","setDropZone","startZone","dropZone","startIndex","setStartIndex","dropIndex","setDropIndex","tmp","useEffect","findIndex","element","trim","searchStart","searchDrop","map","index","includes","isSameDay","isoDay","handleviewingOptions","TaskView","isPriority","setisPriority","isTime","setisTime","isManual","setisManual","settextFilter","setdatetimeFilter","setviewingOptions","deleteTask","updateTask","type","name","value","checked","onChange","target","id","document","getElementById","defaultValue","AddText","onAdd","setText","localDay","setlocalDay","setReminder","setPriority","seteventColor","EventEndTime","setEventEndTime","xDay","setxDay","xTimes","setxTimes","setadditionalRemarks","checkTimeInput","event","targetString","moment","isValid","checkRepeatInput","isxDay","targetNumber","cleanData","startTime","endTime","isSame","isAfter","checkOrder","startTimeString","i","length","checkDuplicate","toString","validateNumber","handleOptionChange","changeEvent","onSubmit","loopTracker","add","toISOString","alert","autoComplete","marginRight","placeholder","format","Date","onKeyUp","hours","width","LoadingScreen","src","process","alt","displayTaskorEvent","DayPopup","handleClose","popupText","_id","Calendar","passedTasks","setPassedTasks","isOpen","setisOpen","setpopupText","currentDate","setCurrentDate","selectedDate","setSelectedDate","push","nextMonth","addMonths","prevMonth","subMonths","onDateClick","days","startDate","startOfWeek","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","TaskToCalendarColoring","traversal","TaskToCalendar","storageArray","cloneDay","isSameMonth","toDate","cells","Authentication","setisAuth","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","loginUsername","setLoginUsername","loginPassword","setLoginPassword","registerText","setregisterText","registerOk","setregisterOk","animationLeave","setAnimationLeave","animationEnter","setAnimationEnter","loginText","setloginText","loginanimationLeave","setloginanimationLeave","loginanimationEnter","setloginanimationEnter","uppercaseCheck","RegExp","lowercaseCheck","digitCheck","specialCheck","setGone","Promise","resolve","reject","getElementsByClassName","display","animateLeaveEnter","then","loginsetGone","loginanimateLeaveEnter","getUser","Axios","method","withCredentials","url","res","data","fontSize","onInput","test","username","password","App","fetchTasks","setTasks","setisLoading","isLoading","showAddButton","setshowAddButton","isAuth","sortedTasks","sort","a","b","unix","AddTask","TaskAdded","TaskDelete","newTaskOrdering","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ab86b06c.chunk.js","sourcesContent":["\n// Catch toggleAdd function (called onClickFunction here) from Header.js\nconst Button = function( {text, color, onClickFunction} )\n{\n    return (\n        <button\n            onClick = {onClickFunction}             // When button is clicked, execute toggleAdd() function which originates from App.js\n            style = {{backgroundColor : color}}     // toggleAdd function will invert showAddButton in App.js, which in turn affects Form visibility\n            className = 'btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button","// JSX return is wrapped in (), and remember that it can only return one Parent Element\nimport Button from './Button'\n\nconst Header = function( {buttonColorDecider, toggleAdd} )\n{\n    return (\n        <header className = 'header'>\n            <h1 style = {{fontStyle : 'italic', fontFamily : \"Chalkduster\", color : '#6969ff'}}> CalisPlanner </h1>\n            <Button\n                color = { buttonColorDecider ? 'red' : 'green' }\n                text = { buttonColorDecider ? 'Done Adding' : 'Start Adding' }\n                onClickFunction = {toggleAdd}      // Pass down toggleAdd function to Button.js as a Prop\n            />\n        </header>\n    )\n}\n\n// What are you exposing to others that import this file?\nexport default Header","import {FaTimes} from 'react-icons/fa'\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport parseISO from \"date-fns/parseISO\";\nimport {useState} from \"react\";  // Importing Icons from installed React Icons Library. Restart npm server after installing!\n/* Events are stored in App.js, so how to modify the component when we click on it?\n- We could access the State within our components, if we were using Redux/Context\n- Alternatively, we could use Props. Send down a function as a Prop, then fire that function off here in Task.js\n  State gets passed down, Actions get passed up\n */\n\n\n// Decides the BACKGROUND COLOR of the Tasks\nfunction priorityColor(task) {\n    if (task) {\n        if (Number(task.priority !== 0)) {\n            switch (task.priority) {\n                case 1 : return \"SpringGreen\"\n                case 2 : return \"Khaki\"\n                case 3 : return \"IndianRed\"\n                default : return \"Black\" // Shouldn't happen\n            }\n        } else return String(task.eventColor)\n    }\n}\n\n// wrt INDIVIVUAL Task (we have mapped in Tasks.js)\nconst Task = function({task, onDelete, dragStart, dragDrop, onDropFunc})\n{\n    const [animation, setAnimation] = useState(false)\n\n    const animate = () => {\n        setAnimation(true)\n        setTimeout( () => setAnimation(false), 3000)\n    }\n\n    return(\n        <div style = {{backgroundColor: priorityColor(task)}}\n             className = {` task ${task.reminder ? 'reminder' : ' '} `}\n             draggable = 'true'\n\n             // capture information from Source\n             onDragStart = { (e) => {\n                 dragStart(e)\n             }}\n\n             // capture information when hovering, ONLY captures Source\n             // is here just to enable onDrop\n             onDragOver = { (e) => {\n                 e.stopPropagation()\n                 e.preventDefault()\n             }}\n\n             // Capture information on Drop\n             onDrop = { (e) => {\n                 e.stopPropagation()\n                 e.preventDefault()\n                 dragDrop(e)\n             }}\n\n             // fires AFTER onDrop\n             onDragEnd = { () => {\n                 onDropFunc()\n             }}\n\n        >\n            <h3>\n                {task.text}\n                <FaTimes\n                    className = {animation ? 'deleteButton' : ''}\n                    style = {{ color : 'Black', cursor : 'pointer'}}   /* Use double braces for Style */\n                    onClick = { () => {onDelete(task); animate() }}             /* Pass in the task.text as well! */\n                    /* onClick will cause onDelete to work it's way up to App.js, where it will call deleteTask */\n                />\n            </h3>\n\n            <p>\n                {task.priority === 0\n                    ? task.day.slice(0,-12) + \" - \" + formatISO9075(parseISO(task.isoEventEndTime), {representation: 'time'}).slice(0, -3)\n                    : task.day.slice(0, -12)}\n            </p>\n\n\n            {/* tooltiptextNoDisplay is not defined in index.css, this is so that the hover wont work on it */}\n            <p className = {task.additionalRemarks === '' ? 'tooltiptextNoDisplay' : \"tooltiptext\"}>\n                {task.additionalRemarks}\n            </p>\n\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\nimport {useEffect, useState} from 'react'\nimport parseISO from 'date-fns/parseISO'\nimport isSameDay from 'date-fns/isSameDay'\n\nconst Tasks = function ({tasks, onDelete, toggleManual, onUpdate, textFilter, datetimeFilter, viewingOptions}) {\n\n    function dragStart(e) {\n        setStartZone(e.currentTarget.querySelector('h3').textContent + e.currentTarget.querySelector('p').textContent)\n    }\n\n    function dragDrop(e) {\n        setDropZone(e.currentTarget.querySelector('h3').textContent + e.currentTarget.querySelector('p').textContent)\n    }\n\n    function searchStart(startZone) {\n        if (startZone) {\n            return tasks.findIndex(element => {\n                return (element.priority === 0\n                    ? element.text.trim() === startZone.slice(0, -29).trim() && (element.day.slice(0, -12).trim() + ' - ' + element.isoEventEndTime.slice(-18,-13).trim() === startZone.slice(-29).trim())\n                    : element.text.trim() === startZone.slice(0, -21).trim() && element.day.slice(0, -12).trim() === startZone.slice(-21).trim())\n            })\n        }\n    }\n\n    function searchDrop(dropZone) {\n        if (dropZone) {\n            return tasks.findIndex(element => {\n                return (element.priority === 0\n                    ? element.text.trim() === dropZone.slice(0,-29).trim() && (element.day.slice(0,-12).trim() + ' - ' + element.isoEventEndTime.slice(-18,-13).trim() === dropZone.slice(-29).trim())\n                : element.text.trim() === dropZone.slice(0,-21).trim() && element.day.slice(0, -12).trim() === dropZone.slice(-21).trim())\n            })\n        }\n    }\n\n    const [startZone, setStartZone] = useState(null)\n    const [dropZone, setDropZone] = useState(null)\n    const [startIndex, setStartIndex] = useState(null)\n    const [dropIndex, setDropIndex] = useState(null)\n\n    // used for Manual Tasks (initialized to MongoDB side)\n    // whenever Drag n Drop used, Tasks.js is re-rendered (causing new MongoDB side to be captured!)\n    useEffect(() => {\n            setStartIndex(searchStart(startZone))\n            setDropIndex(searchDrop(dropZone))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [startZone, dropZone, tasks[startIndex], tasks[dropIndex]]\n    )\n\n    function onDropFunc() {\n        if (toggleManual) {\n            let tmp = tasks[startIndex]\n            tasks[startIndex] = tasks[dropIndex]\n            tasks[dropIndex] = tmp\n            onUpdate(tasks)\n        }\n\n        // prevent Snowball effect\n        setStartIndex(null)\n        setDropIndex(null)\n    }\n\n    function handleviewingOptions (task) {\n        switch(viewingOptions) {\n            case '0' : return (task.priority !== 0)    // only view Tasks (viewingOptions === 0)\n            case '1' : return (task.priority === 0)    // only view Events (viewingOptions === 1)\n            default : return true                    // view both Tasks and Events\n        }\n    }\n\n    return (\n        <>\n            {\n                tasks.map(     // For each index in tasks Object Array, run the function defined below on each index\n                    // hide Task components that fail the Search filter\n                    (task, index) => task\n                    && task.text.includes(textFilter)\n                    && (isSameDay(parseISO(datetimeFilter), parseISO(task.isoDay)) || datetimeFilter === '')\n                    && handleviewingOptions(task) ?\n                        (\n                            // Function returns a user-defined Task Component\n                            <Task\n                                key={index}         /* Store each task.id into key variable */\n                                task={task}         /* Pass in task as Prop into Task.js, using variable task */\n                                onDelete={onDelete} /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n                                dragStart={dragStart}\n                                dragDrop={dragDrop}\n                                onDropFunc={onDropFunc}\n                            />\n                        ) : null\n                )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n","import Tasks from \"./Tasks\";\n\nconst TaskView = ({tasks, isPriority, setisPriority, isTime, setisTime, isManual, setisManual,\n                  textFilter, settextFilter, datetimeFilter, setdatetimeFilter, viewingOptions, setviewingOptions, deleteTask, updateTask}) => {\n\n    return (\n        <div className = 'TaskView CalendarTaskView-Container-TaskView'>\n        <div>\n            <label> togglePriority </label>\n            <input\n                type='radio'\n                name='toggleOptions'\n                value={isPriority}\n                checked={isPriority}\n                onChange={(e) => setisPriority(e.currentTarget.checked)}\n            />\n\n            <label> toggleTime </label>\n            <input\n                type='radio'\n                name='toggleOptions'\n                value={isTime}\n                checked={isTime}\n                onChange={(e) => setisTime(e.currentTarget.checked)}\n            />\n\n            <label> toggleManual </label>\n            <input\n                type='radio'\n                name='toggleOptions'\n                value={isManual}\n                checked={isManual}\n                onChange={(e) => setisManual(e.currentTarget.checked)}\n            />\n        </div>\n\n        <div>\n            <label> Detail Search </label>\n            <input\n                type='text'\n                value={textFilter}\n                onChange={(e) => settextFilter(e.target.value)}\n            />\n        </div>\n\n        <div>\n            <label> Date Search </label>\n            <input\n                type='date'\n                value={datetimeFilter}\n                onChange={(e) => setdatetimeFilter(e.target.value)}\n            />\n            <button onClick={() => setdatetimeFilter('')}> Clear</button>\n        </div>\n\n        <div>\n            <label> Viewing Options </label>\n            <select id='viewingOptions'\n                    onChange={(e) => setviewingOptions(document.getElementById('viewingOptions').value)}\n                    defaultValue = {viewingOptions}\n            >\n                <option value='0'> Tasks</option>\n                <option value='1'> Events</option>\n                <option value='2'> Tasks & Events</option>\n            </select>\n        </div>\n\n            <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                toggleManual={isManual}\n                onUpdate={updateTask}\n                textFilter={textFilter}\n                datetimeFilter={datetimeFilter}\n                viewingOptions={viewingOptions}\n            />\n\n        </div>\n\n    )\n}\n\nexport default TaskView","// Each input will have it's own COMPONENT level state, not APP level state\nimport {useState} from 'react'\nimport moment from 'moment'\nimport format from \"date-fns/format\"\nimport add from 'date-fns/add'\nimport 'animate.css'\n\n// AddText function catches onAdd Prop, that was passed in by App.js\n// AddText has it's own onSubmitFunction, that triggers when onSubmit EVENT triggers.\n// State Variables here MUST share the same name as State Variables in App.js\nconst AddText = function( {onAdd, tasks} )\n{\n    const [text, setText] = useState('')\n    const [localDay, setlocalDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const [priority, setPriority] = useState(4)\n    const [eventColor, seteventColor] = useState('#A9A9A9')\n    const [EventEndTime, setEventEndTime] = useState('')\n    const [xDay, setxDay] = useState('')                         // difference between repeat blocks\n    const [xTimes, setxTimes] = useState('')                     // how many times to repeat\n    const [additionalRemarks, setadditionalRemarks] = useState('')\n    const [animation, setAnimation] = useState(false)\n\n    // duplicate = similarText and startTime\n    function checkDuplicate (text, startTimeString) {\n        if (tasks) {\n            for (let i = 0; i < tasks.length; i++) {\n                if (tasks[i].text === text && tasks[i].day === startTimeString)\n                    return true\n            }\n            return false\n        }\n    }\n\n    function checkOrder (startTime, endTime) {\n        return(moment(endTime).isAfter(startTime,'minute'))\n    }\n\n    function validateNumber(xDay,xTimes) {\n        // eslint-disable-next-line no-mixed-operators\n        return (xDay % 1 === 0 && xTimes % 1 === 0 && 0 < xDay <= 28 && 0 < xTimes <= 4)\n    }\n\n    function checkTimeInput(event, targetString) {\n        if (event) {\n            !moment(targetString, \"D MMMM YYYY h:mma\", true).isValid()\n                ? document.getElementById(event.target.id).style.color = 'red'\n                : document.getElementById(event.target.id).style.color = 'black'\n        }\n    }\n\n    function checkRepeatInput(event, isxDay, targetNumber) {\n        if (event) {\n            targetNumber > 0 && targetNumber % 1 === 0  ?\n                isxDay ? targetNumber > 28 ? document.getElementById(event.target.id).style.color = 'red' : document.getElementById(event.target.id).style.color = 'black'\n                    : targetNumber > 4 ? document.getElementById(event.target.id).style.color = 'red' : document.getElementById(event.target.id).style.color = 'black'\n                : document.getElementById(event.target.id).style.color = 'red'\n        }\n    }\n\n    function cleanData (text, localDay, EventEndTime) {\n        let startTime = moment(localDay, \"D MMMM YYYY h:mma\", true)\n        let endTime = moment(EventEndTime,\"D MMMM YYYY h:mma\", true)\n\n        if (priority <= 3 && text && moment(startTime).isValid()\n            && ( (priority === 0 && moment(endTime).isValid() && moment(startTime).isSame(endTime, 'day') && checkOrder(startTime,endTime)) || (priority !== 0) )\n            && !checkDuplicate(text,startTime.toString())\n            && validateNumber(xDay,xTimes)\n        ) return true\n\n        else return false\n    }\n\n    // Logic when User clicks 'Submit'\n    const onSubmitFunction = function(e)    // Input is the Event currently happening (which will be the event that triggers onSubmit)\n    {\n        e.preventDefault()  // Prevents submission to a new webpage\n\n        if (!cleanData(text,localDay,EventEndTime))\n            alert(\"Please check your Inputs again\")\n\n        else\n        {\n            let loopTracker = -1\n\n            do {\n                let isoDay = moment((moment(localDay, \"D MMMM YYYY h:mma\", true)).add(xDay * loopTracker, 'days')).toISOString(true)                  // ISOString, prevent UTC conversion\n                let day = moment((moment(localDay, \"D MMMM YYYY h:mma\", true)).add(xDay * loopTracker, 'days')).toString()                                       // JSDateString, Date Object\n                let isoEventEndTime = moment((moment(EventEndTime, \"D MMMM YYYY h:mma\", true)).add(xDay * loopTracker, 'days')).toISOString(true)     // ISOString, prevent UTC conversion\n                onAdd({text, day, isoDay, reminder, priority, eventColor, isoEventEndTime, additionalRemarks})\n                loopTracker++\n            } while (loopTracker < xTimes)\n\n            // Clear the form from whatever the User typed in just now\n            setText('')\n            setlocalDay('')\n            setReminder(false)\n            setPriority(4)\n            seteventColor('#A9A9A9')\n            setEventEndTime('')\n            setxDay('')\n            setxTimes('')\n            setadditionalRemarks('')\n        }\n    }\n\n    const handleOptionChange = (changeEvent) => {\n        setPriority(Number(changeEvent.target.value))    // Cast to Number, target.value is in String\n\n        // Events will not have their color determined here, must wait for color-picker\n        if (changeEvent.target.value !== 0) {\n            switch (changeEvent.target.value) {\n                case '1' : {seteventColor('#00FF00'); break}\n                case '2' : {seteventColor ('#FFFF00'); break}\n                case '3' : {seteventColor('#FF0000'); break}\n                default : {seteventColor (\"#A9A9A9\")}\n            }\n        }\n    }\n\n    const handleColorChange = (changeEvent) => {\n        seteventColor(changeEvent.target.value)\n    }\n\n    const animate = () => {\n        setAnimation(true)\n        setTimeout( () => setAnimation(false), 3000)\n    }\n\n    return(\n        <form className = 'add-form' onSubmit = {onSubmitFunction} autoComplete = \"off\">\n            <div className= 'priorityRadio'>\n                <h3> Task or Event? </h3>\n                <label style = {{marginRight : '15px'}}>\n                    <input\n                        type = 'radio'\n                        value = '3'\n                        checked = {priority === 3}\n                        onChange = {handleOptionChange}\n                        style = {{marginRight : '2px'}}\n                    />\n                    High Task\n                </label>\n\n                <label style = {{marginRight : '15px'}}>\n                    <input\n                        type = 'radio'\n                        value = '2'\n                        checked = {priority === 2}\n                        onChange = {handleOptionChange}\n                        style = {{marginRight : '2px'}}\n                    />\n                    Medium Task\n                </label>\n\n                <label style = {{marginRight : '15px'}}>\n                    <input\n                        type = 'radio'\n                        value = '1'\n                        checked = {priority === 1}\n                        onChange = {handleOptionChange}\n                        style = {{marginRight : '2px'}}\n                    />\n                    Low Task\n                </label>\n\n                <label style = {{marginRight : '3px'}}>\n                    <input\n                        type = 'radio'\n                        value = '0'\n                        checked = {priority === 0}\n                        onChange = {handleOptionChange}\n                        style = {{marginRight : '2px'}}\n                    />\n                    Event\n                </label>\n\n                    <input\n                        type = \"color\"\n                        value = {priority === 0 ? eventColor : \"#A9A9A9\"}\n                        onChange = {handleColorChange}\n                    />\n            </div>\n\n            <div className = 'form-control'>\n                <label> {priority === 0 ? 'Event Details' : 'Task Details'} </label>\n                <input type = 'text'\n                       id = 'TaskEventText'\n                       placeholder = 'What needs to be done?'\n                       value = {text}\n                       onChange = { (e) => setText(e.target.value) }\n                />\n            </div>\n\n            <div className = 'form-control'>\n                <label> {priority === 0 ? 'Event Start' : 'Task Deadline'} </label>\n                <input type='text'\n                       id = 'DateAndTimeStart'\n                       placeholder = {format(new Date(), 'd MMMM y hh:mmaaa')}\n                       value = {localDay}\n                       onChange = { (e) => setlocalDay(e.target.value) }\n                       onKeyUp = { (e) => checkTimeInput(e, localDay)}\n                />\n            </div>\n\n            {priority === 0 &&\n            <div className = 'form-control'>\n                <label> Event End </label>\n                <input type = 'text'\n                       id = 'DateAndTimeEnd'\n                       placeholder = {format(add(new Date(), {hours : 1}), 'd MMMM y hh:mmaaa')}\n                       value = {EventEndTime}\n                       onChange = { (e) => setEventEndTime(e.target.value)}\n                       onKeyUp = { (e) => checkTimeInput(e, EventEndTime)}\n                />\n            </div>\n            }\n\n            <div className = 'form-control form-control-check'>  {/* Input multiple classes by using Quotations, can use String Template also */}\n                <label> Reminders? </label>\n                <input type='checkbox'\n                       name='Reminders'\n                       value = {reminder}\n                       checked = {reminder} // Iff reminder is true, then box will be checked\n                       onChange = { (e) => setReminder(e.currentTarget.checked) }\n                />\n            </div>\n\n            <div>\n                <h3> Repeat? (Optional) </h3>\n\n                <label>\n                    Repeat every <input\n                    style={{width: \"125px\", marginRight : '3px'}}\n                    type='number'\n                    id='xDay'\n                    placeholder=' enter a number...'\n                    value={xDay}\n                    onChange={(e) => setxDay(e.target.value)}\n                    onKeyUp={(e) => checkRepeatInput(e, true, xDay)} />\n                </label>\n\n                <label>\n                    days, <input\n                    style={{width: \"127px\"}}\n                    type='number'\n                    id='xTimes'\n                    placeholder=' how many times?'\n                    value={xTimes}\n                    onChange={(e) => setxTimes(e.target.value)}\n                    onKeyUp={(e) => checkRepeatInput(e, false, xTimes)}\n                />\n                </label>\n            </div>\n            <br/>\n\n            <div>\n                <h3> Additional Remarks? (Optional) </h3>\n                <label>\n                    <input\n                        style = {{width : \"300px\"}}\n                        type = 'text'\n                        id = 'additionalRemarks'\n                        placeholder = '  Enter your remarks here...'\n                        value = {additionalRemarks}\n                        onChange = { (e) => setadditionalRemarks(e.target.value) }\n                    />\n                </label>\n            </div>\n            <br/>\n\n            <input\n                type = 'submit'\n                value = 'Save'\n                className = {animation ? 'btn btn-block saveButtonAnimation' : 'btn btn-block'}\n                onClick = {animate}\n            />\n\n        </form>\n    )\n}\n\nexport default AddText","import './LoadingScreen.css'\n\nconst LoadingScreen = function() {\n    return (\n        <div className = \"loadingScreen\">\n        <img\n             src = {process.env.PUBLIC_URL + 'LoadingBurger.gif'} alt='loading...'\n        />\n        </div>\n    )\n}\n\nexport default LoadingScreen","import \"./DayPopUp.css\"\nimport formatISO9075 from \"date-fns/formatISO9075\";\nimport parseISO from \"date-fns/parseISO\";\n\nfunction displayTaskorEvent(element) {\n    return (element.priority === 0 ?\n        formatISO9075(parseISO(element.isoDay), {representation: 'time'}).slice(0, -3)\n        + \"-\" + formatISO9075(parseISO(element.isoEventEndTime), {representation: 'time'}).slice(0, -3)\n        : formatISO9075(parseISO(element.isoDay), {representation: 'time'}).slice(0, -3))\n}\n\nconst DayPopup = ({handleClose, popupText}) => {\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className = 'close-icon' onClick = {handleClose}> x </span>\n                {\n                    popupText.map(\n                        (element) => (\n                            <div key = {element._id}>\n                                <span> {element.text} </span>\n                                <span style = {{color: element.eventColor}}> {displayTaskorEvent(element)} </span>\n                                <span style = {{fontStyle : \"italic\", color : \"gray\"}} > {element.additionalRemarks}</span>\n                            </div>\n                        )\n\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default DayPopup\n","import React, {useEffect, useState} from \"react\";\nimport DayPopup from './DayPopup'\nimport \"./Calendar.css\";\nimport format from \"date-fns/format\"\nimport startOfWeek from 'date-fns/startOfWeek'\nimport endOfWeek from 'date-fns/endOfWeek'\nimport startOfMonth from 'date-fns/startOfMonth'\nimport endOfMonth from 'date-fns/endOfMonth'\nimport isSameMonth from 'date-fns/isSameMonth'\nimport isSameDay from 'date-fns/isSameDay'\nimport addDays from 'date-fns/addDays'\nimport addMonths from 'date-fns/addMonths'\nimport subMonths from \"date-fns/subMonths\"\nimport toDate from 'date-fns/toDate'\nimport parseISO from 'date-fns/parseISO'            // parse ISO to Date\nimport formatISO9075 from 'date-fns/formatISO9075'\n\nconst Calendar = ({tasks, isPriority, isTime, textFilter, datetimeFilter, viewingOptions}) => {\n\n    const[passedTasks, setPassedTasks] = useState(tasks)\n    const [isOpen, setisOpen] = useState(false)\n    const [popupText, setpopupText] = useState([])\n\n    useEffect(() => {\n            if (tasks && tasks.length > 0)\n                setPassedTasks([...tasks])\n\n            else if (tasks.length >= 0)\n                setPassedTasks([])\n        }, [tasks, isPriority, isTime]\n    )\n\n    // Default State is current Day\n    const [currentDate, setCurrentDate] = useState(new Date());     // for Calendar to render proper month\n    const [selectedDate, setSelectedDate] = useState(new Date());   // styling for selected Date\n\n    useEffect(() => {\n        let tmp = []\n\n        // Search through tasks Array for selectedDate\n        for (let i = 0; i < tasks.length; i++) {\n            if (isSameDay(parseISO(tasks[i].isoDay), selectedDate))\n                tmp.push(tasks[i])\n        }\n        setpopupText(tmp)\n        }, [selectedDate]\n    )\n\n    // Add 1 to current Month\n    const nextMonth = () => { setCurrentDate(addMonths(currentDate, 1)); };\n\n    // Deduct 1 from current Month\n    const prevMonth = () => { setCurrentDate(subMonths(currentDate, 1)); };\n\n    // sets how Header (Month/Year) is displayed\n    const header = () => {\n        const dateFormat = \"MMMM yyyy\";\n        return (\n            <div className=\"header row flex-middle centerDay\">\n\n                <div className=\"column col-start\">\n                    <div className=\"icon\" onClick={prevMonth}>\n                        chevron_left\n                    </div>\n                </div>\n\n                <div className=\"column col-center\">\n                    <span>{format(currentDate, dateFormat)}</span>\n                </div>\n\n                <div className=\"column col-end\">\n                    <div className=\"icon\" onClick={nextMonth}>\n                        chevron_right\n                    </div>\n                </div>\n\n            </div>\n        );\n    };\n\n    // sets how (Monday-Sunday) is displayed just below Header\n    const days = () => {\n        const dateFormat = \"E\";\n        const days = [];\n        let startDate = startOfWeek(currentDate);   // use date-fns startOfWeek along with currentDate state\n\n        // For each iteration, push a <div> into days Array\n        for (let i = 1; i < 8; i++) {   // Mon-Sunday (1-8)\n            days.push(\n                <div className=\"column col-center centerDay\" key={i}>\n                    {format(addDays(startDate, i), dateFormat)}\n                </div>\n            );\n        }\n        return <div className=\"days row\">{days}</div>;\n    };\n\n    const onDateClick = (day, e) => {\n        setSelectedDate(day);\n        setisOpen(true)\n    }\n\n    function handleviewingOptions (task) {\n        switch(viewingOptions) {\n            case '0' : return (task.priority !== 0)    // only view Tasks (viewingOptions === 0)\n            case '1' : return (task.priority === 0)    // only view Events (viewingOptions === 1)\n            default : return true                      // view both Tasks and Events\n        }\n    }\n\n    // sets how EACH cell is populated\n    const cells = (passedTasks) => {\n        const monthStart = startOfMonth(currentDate);    // when does month start (Day)\n        const monthEnd = endOfMonth(monthStart);         // when does month end (Day)\n        const startDate = addDays(startOfWeek(monthStart),1);       //  when does THAT WEEK start for the month start DAY. Offset by 1 because Mon-Sun\n        const endDate = endOfWeek(monthEnd);             // final date of the CURRENT month, use as a check against\n        const dateFormat = \"d\";                          // render correct date in each cell\n        const rows = [];                                 // render all weeks of given month\n        let days = [];                                   // render each day in the week\n        let day = startDate;                             // points to start date of CURRENT month\n        let formattedDate = \"\";\n\n        // Determines color of Tasks in storageArray (according to Priority)\n        function TaskToCalendarColoring(passedTasks, traversal) {\n            if (passedTasks) {    // prevent Memory Leak\n                if (passedTasks[traversal].priority !== 0) {\n                    switch (passedTasks[traversal].priority) {\n                        case 3 : return \"IndianRed\"\n                        case 2 : return \"Khaki\"\n                        case 1 : return \"SpringGreen\"\n                        default : return \"Blue\"   // Shouldn't happen\n                    }\n                }\n\n                else {\n                    return passedTasks[traversal].eventColor\n                }\n            }\n        }\n\n        let traversal = 0;  // Initializing to zero ONCE\n        // Extract Tasks from database to Array\n        function TaskToCalendar(passedTasks, traversal, day) {\n            let tmp = [];\n            while (passedTasks && passedTasks[traversal]) {\n                if (isSameDay(parseISO(passedTasks[traversal].isoDay), day)) {\n                    tmp.push(passedTasks[traversal].text.includes(textFilter)\n                    && (isSameDay(parseISO(datetimeFilter), parseISO(passedTasks[traversal].isoDay)) || datetimeFilter === '')\n                    && handleviewingOptions(passedTasks[traversal])\n                        ?\n                        <div\n                            key={parseISO(passedTasks[traversal].isoDay) + passedTasks[traversal].text}\n                        >\n                            <span> {passedTasks[traversal].text} </span>\n                            <span style={{color: TaskToCalendarColoring(passedTasks, traversal)}}>\n                                {passedTasks[traversal].priority === 0 ?\n                                    formatISO9075(parseISO(passedTasks[traversal].isoDay), {representation: 'time'}).slice(0, -3)\n                                    + \"-\" + formatISO9075(parseISO(passedTasks[traversal].isoEventEndTime), {representation: 'time'}).slice(0, -3)\n                                    : formatISO9075(parseISO(passedTasks[traversal].isoDay), {representation: 'time'}).slice(0, -3)}\n                        </span>\n                        </div>\n                        : null)\n                }\n                traversal++\n            }\n            return {storageArray: tmp}\n        }\n\n        while (day <= endDate) {   // Guarantees that loop runs for entirety of month\n            // For each iteration, push a single cell into days array\n            for (let i = 0; i < 7; i++) {\n                formattedDate = format(day, dateFormat);\n                const cloneDay = day;\n\n                // For each DAY, sweep through the tasks array ONCE ENTIRELY\n                const {storageArray} = TaskToCalendar(passedTasks, traversal, day)\n\n                traversal = 0   // RESET the modified traversal value\n\n                days.push(\n                    <div\n                        className={`column cell ${!isSameMonth(day, monthStart) ? \"disabled\"      // Days not in current Month are greyed out\n                            : isSameDay(day, selectedDate) ? \"currentDate\": \"\"}`}                 // currentDate and selectedDate overwrite\n                        key={day}\n                        onClick = {(e) => onDateClick(toDate(cloneDay), e)}   // sets currentDate hook to whatever cell is being clicked on\n                    >\n                        <span className=\"number\"> {formattedDate} </span>\n                        <span className=\"bg\"> {formattedDate} </span>\n                        {storageArray}\n                    </div>\n                );\n\n                day = addDays(day, 1);     // Increment to next day\n            }\n\n            // Push the entire days array (as a single div) into rows array\n            rows.push(\n                <div className=\"row\" key={day}> {days} </div>\n            );\n\n            // Clear the days array to start over for the next week (next 7 days)\n            days = [];\n        }\n        // Once while loop is done, return the full rows array as single div\n        return <div className=\"body\">{rows}</div>;\n    }\n\n    const togglePopup = () => {\n        setisOpen(!isOpen)\n    }\n\n    // Rendering\n    return (\n            <div className=\"calendar CalendarTaskView-Container-Calendar\">\n                <div>{header()}</div>\n                <div>{days()}</div>\n                <div>{cells(passedTasks)}</div>\n                {isOpen && <DayPopup handleClose={togglePopup} popupText = {popupText} />}\n            </div>\n    );\n};\nexport default Calendar;","import React, { useState } from \"react\";\nimport \"./AuthenticationStyle.css\";\nimport 'animate.css'\nimport Axios from \"axios\";   // Captures HTTP requests from specified Paths, PROMISED based\nimport {RiEmotionHappyLine, RiEmotionUnhappyLine, ImHourGlass, AiOutlineFastBackward, GoThumbsup} from 'react-icons/all'\n\n/*  How does Axios capture form data (using Registering as example)\n\n    1. onChange event captures whatever the user is typing, and updates Stateful Value\n    2. onClick event (clicking submission button) will trigger register FUNCTION\n    3. Axios captures the following data\n       - method (which HTTP request method do you want to use?)\n       - data (can be an Object that which contains the properties we want to send over)\n       - URL of service endpoint (POST TO this url, GET FROM this url)\n\n       since Axios is PROMISED BASED, we use .then to declare what we want to do, after data successfully posted\n */\n\nfunction Authentication( {setisAuth} ) {\n    const [registerUsername, setRegisterUsername] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n    const [loginUsername, setLoginUsername] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    const [registerText, setregisterText] = useState('')\n    const [registerOk, setregisterOk] = useState(false)\n    const [animationLeave, setAnimationLeave] = useState(false)\n    const [animationEnter, setAnimationEnter] = useState(false)\n\n    const [loginText, setloginText] = useState('')\n    const [loginanimationLeave, setloginanimationLeave] = useState(false)\n    const [loginanimationEnter, setloginanimationEnter] = useState(false)\n\n    let uppercaseCheck = new RegExp ('(?=.*[A-Z])')\n    let lowercaseCheck = new RegExp ('(?=.*[a-z])')\n    let digitCheck = new RegExp ('(?=.*[0-9])')\n    let specialCheck = new RegExp ('([^A-Za-z0-9])')\n\n    // Register Animation\n    function registerButtonDisplay () {\n        document.getElementsByClassName(\"registerButtonAnimationLeave\")[0].style.display = 'none'\n    }\n\n    function setGone () {\n        return new Promise( function(resolve,reject) {\n            setTimeout(() => registerButtonDisplay(), 1000)\n            resolve()\n        })\n    }\n\n    function animateLeave() {\n        return new Promise(function(resolve,reject){\n            setAnimationLeave(true)\n            resolve()\n        })\n    }\n\n    const animateEnter = () => {\n        setTimeout( () => setAnimationEnter(true), 1000)\n    }\n\n    function animateLeaveEnter () {\n        animateLeave().then(function () {\n            setGone().then(function () {\n                animateEnter()\n            })\n        })\n    }\n\n    function animateRegisterBack () {\n        setAnimationLeave(false)\n        setAnimationEnter(false)\n        setregisterText('')\n        setregisterOk(false)\n        document.getElementsByClassName(\"registerButtonAnimationLeave\")[0].style.display = 'block'\n    }\n\n    // Login Animation\n    function loginButtonDisplay () {\n        document.getElementsByClassName(\"loginButtonAnimationLeave\")[0].style.display = 'none'\n    }\n\n    function loginsetGone () {\n        return new Promise( function(resolve,reject) {\n            setTimeout(() => loginButtonDisplay(), 1000)\n            resolve()\n        })\n    }\n\n    function loginanimateLeave() {\n        return new Promise(function(resolve,reject){\n            setloginanimationLeave(true)\n            resolve()\n        })\n    }\n\n    const loginanimateEnter = () => {\n        setTimeout( () => setloginanimationEnter(true), 1000)\n    }\n\n    function loginanimateLeaveEnter () {\n        loginanimateLeave().then(function () {\n            loginsetGone().then(function () {\n                loginanimateEnter()\n            })\n        })\n    }\n\n    function animateloginBack () {\n        setloginanimationLeave(false)\n        setloginanimationEnter(false)\n        setloginText('')\n        document.getElementsByClassName(\"loginButtonAnimationLeave\")[0].style.display = 'block'\n    }\n\n    // Registration/Login\n    const register = () => {\n        Axios({\n            method: \"POST\",\n            data: {\n                username: registerUsername,\n                password: registerPassword,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/register\",                 // POST TO this route (location of Backend login route)\n        }).then((res) => {\n            // Invalid Username, Invalid Password, Username Already Taken, User Registered\n            setregisterText(res.data)\n            res.data === 'User Registered!' ? setregisterOk(true) : setregisterOk(false)\n            animateLeaveEnter()\n        });\n    };\n\n    const login = () => {\n        Axios({\n            method: \"POST\",\n            data: {\n                username: loginUsername,\n                password: loginPassword,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/login\",\n        }).then((res) => {\n            if (res.data === 'Invalid Username/Password') {\n                setloginText(res.data)\n                loginanimateLeaveEnter()\n            }\n\n            else\n                getUser()\n        });\n    };\n\n    // Gets information from localhost:4000/user (BACKEND)\n    // Backend is watching 4000/user, and will accordingly send back req.user (from Passportjs)\n    const getUser = () => {\n        Axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:4000/user\",\n        }).then((res) => {     // RESPONSE contains user object\n            setisAuth(res.data)\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <div className = \"start\">\n                <h1 style = {{fontStyle : 'italic', fontFamily : \"Chalkduster\"}}> Calis </h1>\n                <ImHourGlass fontSize = '2em'/>\n            </div>\n\n            <div className = {animationEnter ? 'registerButtonAnimationEnter' : 'registerText'}>\n                <div style = {{fontSize : '2em'}}>\n                    <span style = {{color : registerOk? 'green' : 'red'}}> {registerText} </span>\n                    {registerOk ? <GoThumbsup/> :\n                        <AiOutlineFastBackward\n                            onClick = { () => animateRegisterBack()}\n                        />\n                    }\n                </div>\n            </div>\n\n            <div className = {` ${animationLeave? 'registerButtonAnimationLeave' : 'reg'} `}>\n                <h2>Register</h2>\n                <input\n                    placeholder=\"username\"\n                    onChange={(e) => setRegisterUsername(e.target.value)}\n                />\n\n                <span className='tooltipContainer'>\n                <input\n                    id = 'registerPassword'\n                    type='password'\n                    placeholder=\"password\"\n                    onInput={(e) => setRegisterPassword(e.target.value)}\n                />\n                <div className='passwordText'>\n                    <div>  Minimum Length (4 characters) {registerPassword.length  >= 4 ? <RiEmotionHappyLine id = 'happyFace'/> : <RiEmotionUnhappyLine id = 'sadFace'/>} </div>\n                    <div> At least one Uppercase Character {uppercaseCheck.test(registerPassword) ? <RiEmotionHappyLine id = 'happyFace'/> : <RiEmotionUnhappyLine id ='sadFace'/>} </div>\n                    <div> At least one Lowercase Character {lowercaseCheck.test(registerPassword) ? <RiEmotionHappyLine id = 'happyFace'/> : <RiEmotionUnhappyLine id ='sadFace'/>} </div>\n                    <div> At least one Digit {digitCheck.test(registerPassword) ? <RiEmotionHappyLine id = 'happyFace'/> : <RiEmotionUnhappyLine id ='sadFace'/>} </div>\n                    <div> At least one Special Character {specialCheck.test(registerPassword) ? <RiEmotionHappyLine id = 'happyFace'/> : <RiEmotionUnhappyLine id ='sadFace'/>} </div>\n                </div>\n                </span>\n\n                <button onClick={register}>Register!</button>\n            </div>\n\n            <div className = {loginanimationEnter ? 'loginButtonAnimationEnter' :'loginText' } style = {{fontSize : '2em'}}>\n                <span style = {{color : 'red'}}> {loginText} </span>\n                <AiOutlineFastBackward onClick = {() => animateloginBack()}/>\n            </div>\n\n            <div className = {loginanimationLeave ? 'loginButtonAnimationLeave' : 'login'}>\n                <h2>Login</h2>\n                <input\n                    placeholder=\"username\"\n                    onChange={(e) => setLoginUsername(e.target.value)}\n                />\n                <input\n                    type = 'password'\n                    placeholder=\"password\"\n                    onChange={(e) => setLoginPassword(e.target.value)}\n                />\n                <button onClick={login}>Log in!</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Authentication;","import './components/Body.css'\nimport Header from './components/Header'\nimport TaskView from './components/TaskView'\nimport AddTask from './components/AddTask'\nimport LoadingScreen from './components/LoadingScreen'\nimport {useEffect, useState} from 'react' // Deals with side-effects, Component needs to do something AFTER rendering\nimport Axios from \"axios\"\nimport Calendar from './components/Calendar'\nimport moment from 'moment'\nimport Authentication from './components/Authentication'\n\n\n// App (Global) State\n// Not best practice, will use Redux to keep track of JS States in future\n// Components can be Functions (with hooks) or Classes\nfunction App() {\n\n    const fetchTasks = () => {\n        Axios({\n            method : \"GET\",\n            withCredentials : true,\n            url : 'http://localhost:4000/tasks'\n        }).then((res) => {\n            setTasks(res.data.task)\n            setisLoading(false)\n        })\n    }\n\n    const [isLoading, setisLoading] = useState(true)\n    const [tasks, setTasks] = useState(() => fetchTasks)    // useState function, unlike useState value\n    const [showAddButton, setshowAddButton] = useState(false)\n    const [isAuth, setisAuth] = useState(false)\n    const [isPriority, setisPriority] = useState(false)\n    const [isTime, setisTime] = useState(false)\n    const [isManual, setisManual] = useState(false)\n    const [textFilter, settextFilter] = useState('')\n    const [datetimeFilter, setdatetimeFilter] = useState('')\n    const [viewingOptions, setviewingOptions] = useState(2)\n\n    useEffect(() => {\n            fetchTasks()\n        }, [isAuth]\n    )\n\n    const onAdd = (TaskAdded) => {\n        Axios({\n            method : \"POST\",\n            data : TaskAdded,\n            withCredentials : true,\n            url: \"http://localhost:4000/tasks\",\n        }).then((res) => {\n            fetchTasks()\n        })\n    }\n\n    const deleteTask = (TaskDelete) => {\n        Axios({\n            method : \"DELETE\",\n            data : TaskDelete,\n            withCredentials : true,\n            url : \"http://localhost:4000/tasks\",\n        }).then((res) => {\n            //console.log(res.data.task)\n            fetchTasks()\n        })\n    }\n\n    const updateTask = (newTaskOrdering) => {\n        Axios({\n            method : \"PUT\",\n            data : newTaskOrdering,\n            withCredentials : true,\n            url : \"http://localhost:4000/tasks\",\n        }).then((res) => {\n            fetchTasks()\n        })\n    }\n\n    useEffect(() => {\n            if (tasks.length > 0 && isPriority === true) {\n                const sortedTasks = [...tasks].sort((a, b) => {\n                    if (a.priority > b.priority) return -1    // A Priority > B Priority, leave in same order (Top-Down rendering)\n                    else { return 0 }\n                })\n                setTasks(sortedTasks)\n                setisTime(false)\n                setisManual(false)\n            }\n        }, [isPriority]\n    )\n\n    useEffect(() => {\n            if (tasks.length > 0 && isTime === true) {\n                const sortedTasks = [...tasks].sort((a, b) => {\n                    if ((moment(a.isoDay).unix()) < (moment(b.isoDay).unix())) return -1  // A earlier than B, leave in same order (Top-Down rendering)\n                    else { return 0 }\n                })\n                setTasks(sortedTasks)\n                setisPriority(false)\n                setisManual(false)\n            }\n        }, [isTime]\n    )\n\n    useEffect( () => {\n        if (isManual === true) {\n            fetchTasks()\n            setisPriority(false)\n            setisTime(false)\n        }\n        }, [isManual]\n    )\n\n    // Return is JSX, not HTML\n    // Can only return one single Parent Element\n    return (\n        <>\n            {!isAuth && <Authentication setisAuth={setisAuth}/>}\n\n            {isAuth && isLoading\n                ? <LoadingScreen/>\n                : <>\n                    {isAuth &&\n                    <div className='container'>\n                        <Header\n                            buttonColorDecider={showAddButton}\n                            toggleAdd={() => setshowAddButton(!showAddButton)}\n                        />\n                        {showAddButton ? <AddTask onAdd={onAdd} tasks={tasks}/> : ''}\n                    </div>\n                    }\n\n                    {isAuth && <div className='CalendarTaskView-Container'>\n                        <Calendar\n                            tasks={tasks}\n                            isPriority={isPriority}\n                            isTime={isTime}\n                            textFilter={textFilter}\n                            datetimeFilter={datetimeFilter}\n                            viewingOptions={viewingOptions}/>\n\n                        <TaskView\n                            tasks={tasks}\n                            isPriority={isPriority}\n                            setisPriority={setisPriority}\n                            isTime={isTime}\n                            setisTime={setisTime}\n                            isManual={isManual}\n                            setisManual={setisManual}\n                            textFilter={textFilter}\n                            settextFilter={settextFilter}\n                            datetimeFilter={datetimeFilter}\n                            setdatetimeFilter={setdatetimeFilter}\n                            viewingOptions={viewingOptions}\n                            setviewingOptions={setviewingOptions}\n                            deleteTask={deleteTask}\n                            updateTask={updateTask}/>\n                    </div>\n                    }\n                </>\n            }\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';   // App JS contains root component. (every component that we create, will be in this main root app component)\nimport reportWebVitals from './reportWebVitals';\n\n\n// Inserting app from App.js, into root ID element\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}