{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react'; // Components can be Functions (with hooks) or Classes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // App (Global) State.\n  // Not best practice, will use Redux to keep track of JS States in future\n  // Tasks is name of Array of Objects\n  // setTasks is name of Function, to change State\n  // initialize useState to default value as seen below\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2.30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 4th at 1.30pm',\n    reminder: true\n  }]); // Function to delete Task\n\n  const deleteTask = id => // Arrow Notation, taking in id as input\n  {}; // Return is JSX, not HTML\n  // Can only return one single Parent Element\n\n  /* Pass in deleteTask function as Prop, to Tasks.js\n     - Tasks.js contains Task.js\n     - Task.js contains the button itself, that is the trigger point for deletion\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks\n      /* Passing in tasks as Prop */\n      ,\n      onDelete: deleteTask\n      /* Passing in deleteTask (FUNCTION) as Prop, into variable onDelete */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Z8RqcoSYszPFBX9iA1GNYWfALVY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/App.js"],"names":["Header","Tasks","useState","App","tasks","setTasks","id","text","day","reminder","deleteTask"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA;AAEI;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAC/B;AACII,IAAAA,EAAE,EAAG,CADT;AAEIC,IAAAA,IAAI,EAAG,qBAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAG;AAJf,GAD+B,EAQ/B;AACIH,IAAAA,EAAE,EAAG,CADT;AAEIC,IAAAA,IAAI,EAAG,mBAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAG;AAJf,GAR+B,CAAD,CAAlC,CARW,CAyBX;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAW;AAC9B,GAEC,CAHD,CA1BW,CA+Bb;AACA;;AAEA;AACF;AACA;AACA;;;AACE,sBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,KAAK,EAAIF;AAAe;AAD5B;AAEI,MAAA,QAAQ,EAAIM;AAAY;;AAF5B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/CQP,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\n\n// Components can be Functions (with hooks) or Classes\nfunction App() {\n\n// App (Global) State.\n// Not best practice, will use Redux to keep track of JS States in future\n\n    // Tasks is name of Array of Objects\n    // setTasks is name of Function, to change State\n    // initialize useState to default value as seen below\n    const [tasks, setTasks] = useState([\n        {\n            id : 1,\n            text : 'Doctors Appointment',\n            day : 'Feb 5th at 2.30pm',\n            reminder : true,\n        },\n\n        {\n            id : 2,\n            text : 'Meeting at School',\n            day : 'Feb 4th at 1.30pm',\n            reminder : true,\n        }\n    ]\n    )\n\n    // Function to delete Task\n    const deleteTask = (id) =>    // Arrow Notation, taking in id as input\n    {\n        \n    }\n\n  // Return is JSX, not HTML\n  // Can only return one single Parent Element\n\n  /* Pass in deleteTask function as Prop, to Tasks.js\n     - Tasks.js contains Task.js\n     - Task.js contains the button itself, that is the trigger point for deletion\n   */\n  return (\n    <div className = 'container'>\n        <Header/>\n        <Tasks\n            tasks = {tasks}         /* Passing in tasks as Prop */\n            onDelete = {deleteTask} /* Passing in deleteTask (FUNCTION) as Prop, into variable onDelete */\n        />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}