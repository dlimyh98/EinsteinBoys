{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Tasks.js\";\nimport Task from './Task';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = function ({\n  tasks,\n  onDelete,\n  togglePriority\n}) {\n  if (togglePriority) {\n    tasks.sort((a, b) => {\n      if (a.priority > b.priority) return -1;else {\n        return 0;\n      }\n    });\n  } else {\n    tasks.sort((a, b) => {\n      if (moment(a.isoDay).unix() < moment(b.isoDay).unix()) return -1;else {\n        return 0;\n      }\n    });\n  }\n\n  const Calendar = ({\n    tasks\n  }) => {\n    function TaskToCalendar(tasks, traversal, day) {\n      console.log(\"Tasks are\", tasks);\n      console.log(\"Tasks 0th index is\", tasks[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map( // For each index in tasks Object Array, run the function defined below on each index\n    (task, index) =>\n    /*#__PURE__*/\n    // task is the 'val' argument for .map function. If only one value in argument, it will be val\n    // Function returns a user-defined Task Component\n    _jsxDEV(Task, {\n      /* Store each task.id into key variable */\n      task: task\n      /* Pass in task as Prop into Task.js, using variable task */\n      ,\n      onDelete: onDelete\n      /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Tasks.js"],"names":["Task","moment","Tasks","tasks","onDelete","togglePriority","sort","a","b","priority","isoDay","unix","Calendar","TaskToCalendar","traversal","day","console","log","map","task","index"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,KAAK,GAAG,UAAU;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAV,EAA6C;AAEvD,MAAIA,cAAJ,EAAoB;AAChBF,IAAAA,KAAK,CAACG,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjB,UAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B,OAAO,CAAC,CAAR,CAA7B,KACK;AAAE,eAAO,CAAP;AAAU;AACpB,KAHD;AAIH,GALD,MAOK;AACEN,IAAAA,KAAK,CAACG,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAAS;AACnB,UAAMP,MAAM,CAACM,CAAC,CAACG,MAAH,CAAN,CAAiBC,IAAjB,EAAD,GAA6BV,MAAM,CAACO,CAAC,CAACE,MAAH,CAAN,CAAiBC,IAAjB,EAAlC,EAA6D,OAAO,CAAC,CAAR,CAA7D,KACK;AAAC,eAAO,CAAP;AAAS;AAClB,KAHE;AAIN;;AAED,QAAMC,QAAQ,GAAG,CAAC;AAACT,IAAAA;AAAD,GAAD,KAAa;AAE1B,aAASU,cAAT,CAAwBV,KAAxB,EAA+BW,SAA/B,EAA0CC,GAA1C,EAA+C;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBd,KAAzB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCd,KAAK,CAAC,CAAD,CAAvC;AACH;AACJ,GAND;;AASA,sBACI;AAAA,cAEQA,KAAK,CAACe,GAAN,EAAiC;AAC7B,KAACC,IAAD,EAAOC,KAAP;AAAA;AAAwB;AACpB;AACA,YAAC,IAAD;AACwB;AACpB,MAAA,IAAI,EAAED;AAAc;AAFxB;AAGI,MAAA,QAAQ,EAAEf;AAAU;;AAHxB,OACSgB,KADT;AAAA;AAAA;AAAA;AAAA,YAHR;AAFR,mBADJ;AAgBH,CAzCD;;KAAMlB,K;AA2CN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport moment from 'moment'\n\nconst Tasks = function ({tasks, onDelete, togglePriority}) {\n\n    if (togglePriority) {\n        tasks.sort((a, b) => {\n            if (a.priority > b.priority) return -1\n            else { return 0 }\n        })\n    }\n\n    else {\n           tasks.sort((a,b) => {\n            if ( (moment(a.isoDay).unix()) < (moment(b.isoDay).unix()) ) return -1\n            else {return 0}\n        })\n    }\n\n    const Calendar = ({tasks}) => {\n\n        function TaskToCalendar(tasks, traversal, day) {\n            console.log(\"Tasks are\", tasks)\n            console.log(\"Tasks 0th index is\", tasks[0])\n        }\n    }\n\n\n    return (\n        <>\n            {\n                tasks.map(                       // For each index in tasks Object Array, run the function defined below on each index\n                    (task, index) => (      // task is the 'val' argument for .map function. If only one value in argument, it will be val\n                        // Function returns a user-defined Task Component\n                        <Task\n                            key={index}         /* Store each task.id into key variable */\n                            task={task}         /* Pass in task as Prop into Task.js, using variable task */\n                            onDelete={onDelete} /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n                        />\n                    )\n                )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}