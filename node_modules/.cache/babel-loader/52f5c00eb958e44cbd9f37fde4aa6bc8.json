{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Authentication.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./AuthenticationStyle.css\";\nimport Axios from \"axios\"; // Captures HTTP requests from specified Paths, PROMISED based\n\n/*  How does Axios capture form data (using Registering as example)\n\n    1. onChange event captures whatever the user is typing, and updates Stateful Value\n    2. onClick event (clicking submission button) will trigger register FUNCTION\n    3. Axios captures the following data\n       - method (which HTTP request method do you want to use?)\n       - data (can be an Object that which contains the properties we want to send over)\n       - URL of service endpoint (POST TO this url, GET FROM this url)\n\n       since Axios is PROMISED BASED, we use .then to declare what we want to do, after data successfully posted\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Authentication({\n  setisAuth\n}) {\n  _s();\n\n  const [registerUsername, setRegisterUsername] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [loginUsername, setLoginUsername] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\"); // Takes the data that I am getting from server, and save it in State. So that I can use it later in my application\n\n  const [data, setData] = useState(null);\n\n  const register = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: registerUsername,\n        password: registerPassword\n      },\n      withCredentials: true,\n      url: \"http://localhost:4000/register\" // POST TO this route (location of Backend login route)\n\n    }).then(res => console.log(res));\n  };\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        username: loginUsername,\n        password: loginPassword\n      },\n      withCredentials: true,\n      url: \"http://localhost:4000/login\"\n    }).then(res => console.log(res));\n  }; // Gets information from localhost:4000/user (BACKEND)\n  // Backend is watching 4000/user, and will accordingly send back req.user (from Passportjs)\n\n\n  const getUser = () => {\n    Axios({\n      method: \"GET\",\n      withCredentials: true,\n      url: \"http://localhost:4000/user\"\n    }).then(res => {\n      // RESPONSE contains user object\n      setData(res.data); // access Axios RESPONSE object's data field (payload returned from server)\n\n      setisAuth(res.data);\n      console.log(res.data);\n    });\n  }; // Login / Registration Form\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username\",\n        onChange: e => setRegisterUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"password\",\n        onChange: e => setRegisterPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username\",\n        onChange: e => setLoginUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"password\",\n        onChange: e => setLoginPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUser,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome Back \", data.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Authentication, \"wmk11/vjh1BpJhuI2S6rT5q9CpA=\");\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Authentication.js"],"names":["React","useState","Axios","Authentication","setisAuth","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","loginUsername","setLoginUsername","loginPassword","setLoginPassword","data","setData","register","method","username","password","withCredentials","url","then","res","console","log","login","getUser","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./AuthenticationStyle.css\";\nimport Axios from \"axios\";   // Captures HTTP requests from specified Paths, PROMISED based\n\n/*  How does Axios capture form data (using Registering as example)\n\n    1. onChange event captures whatever the user is typing, and updates Stateful Value\n    2. onClick event (clicking submission button) will trigger register FUNCTION\n    3. Axios captures the following data\n       - method (which HTTP request method do you want to use?)\n       - data (can be an Object that which contains the properties we want to send over)\n       - URL of service endpoint (POST TO this url, GET FROM this url)\n\n       since Axios is PROMISED BASED, we use .then to declare what we want to do, after data successfully posted\n */\n\nfunction Authentication( {setisAuth} ) {\n    const [registerUsername, setRegisterUsername] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n    const [loginUsername, setLoginUsername] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    // Takes the data that I am getting from server, and save it in State. So that I can use it later in my application\n    const [data, setData] = useState(null);\n\n    const register = () => {\n        Axios({\n            method: \"POST\",\n            data: {\n                username: registerUsername,\n                password: registerPassword,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/register\",                 // POST TO this route (location of Backend login route)\n        }).then((res) => console.log(res));\n    };\n\n    const login = () => {\n        Axios({\n            method: \"POST\",\n            data: {\n                username: loginUsername,\n                password: loginPassword,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/login\",\n        }).then((res) => console.log(res));\n    };\n\n    // Gets information from localhost:4000/user (BACKEND)\n    // Backend is watching 4000/user, and will accordingly send back req.user (from Passportjs)\n    const getUser = () => {\n        Axios({\n            method: \"GET\",\n            withCredentials: true,\n            url: \"http://localhost:4000/user\",\n        }).then((res) => {     // RESPONSE contains user object\n            setData(res.data);                    // access Axios RESPONSE object's data field (payload returned from server)\n            setisAuth(res.data)\n            console.log(res.data);\n        });\n    };\n\n    // Login / Registration Form\n    return (\n        <div className=\"App\">\n            <div>\n                <h1>Register</h1>\n                <input\n                    placeholder=\"username\"\n                    onChange={(e) => setRegisterUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    onChange={(e) => setRegisterPassword(e.target.value)}\n                />\n                <button onClick={register}>Submit</button>\n            </div>\n\n            <div>\n                <h1>Login</h1>\n                <input\n                    placeholder=\"username\"\n                    onChange={(e) => setLoginUsername(e.target.value)}\n                />\n                <input\n                    placeholder=\"password\"\n                    onChange={(e) => setLoginPassword(e.target.value)}\n                />\n                <button onClick={login}>Submit</button>\n            </div>\n\n            <div>\n                <h1>Get User</h1>\n                <button onClick={getUser}>Submit</button>\n                {data ? <h1>Welcome Back {data.username}</h1> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default Authentication;"]},"metadata":{},"sourceType":"module"}