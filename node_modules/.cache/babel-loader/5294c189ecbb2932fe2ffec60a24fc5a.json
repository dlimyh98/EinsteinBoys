{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Tasks.js\";\nimport Task from './Task';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = function ({\n  tasks,\n  tasksFunc,\n  onDelete,\n  togglePriority\n}) {\n  /*if (togglePriority) {\n      tasks.sort((a, b) => {\n          if (a.priority > b.priority) return -1\n          else { return 0 }\n      })\n  }\n   else {\n         tasks.sort((a,b) => {\n          if ( (moment(a.isoDay).unix()) < (moment(b.isoDay).unix()) ) return -1\n          else {return 0}\n      })\n  }*/\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map( // For each index in tasks Object Array, run the function defined below on each index\n    (task, index) =>\n    /*#__PURE__*/\n    // task is the 'val' argument for .map function. If only one value in argument, it will be val\n    // Function returns a user-defined Task Component\n    _jsxDEV(Task, {\n      /* Store each task.id into key variable */\n      task: task\n      /* Pass in task as Prop into Task.js, using variable task */\n      ,\n      onDelete: onDelete\n      /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Tasks.js"],"names":["Task","moment","Tasks","tasks","tasksFunc","onDelete","togglePriority","map","task","index"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,KAAK,GAAG,UAAU;AAACC,EAAAA,KAAD;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAV,EAAwD;AAGlE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,sBACI;AAAA,cAEQH,KAAK,CAACI,GAAN,EAAiC;AAC7B,KAACC,IAAD,EAAOC,KAAP;AAAA;AAAwB;AACpB;AACA,YAAC,IAAD;AACwB;AACpB,MAAA,IAAI,EAAED;AAAc;AAFxB;AAGI,MAAA,QAAQ,EAAEH;AAAU;;AAHxB,OACSI,KADT;AAAA;AAAA;AAAA;AAAA,YAHR;AAFR,mBADJ;AAgBH,CAjCD;;KAAMP,K;AAmCN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport moment from 'moment'\n\nconst Tasks = function ({tasks, tasksFunc, onDelete, togglePriority}) {\n\n\n    /*if (togglePriority) {\n        tasks.sort((a, b) => {\n            if (a.priority > b.priority) return -1\n            else { return 0 }\n        })\n    }\n\n    else {\n           tasks.sort((a,b) => {\n            if ( (moment(a.isoDay).unix()) < (moment(b.isoDay).unix()) ) return -1\n            else {return 0}\n        })\n    }*/\n\n    return (\n        <>\n            {\n                tasks.map(                       // For each index in tasks Object Array, run the function defined below on each index\n                    (task, index) => (      // task is the 'val' argument for .map function. If only one value in argument, it will be val\n                        // Function returns a user-defined Task Component\n                        <Task\n                            key={index}         /* Store each task.id into key variable */\n                            task={task}         /* Pass in task as Prop into Task.js, using variable task */\n                            onDelete={onDelete} /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n                        />\n                    )\n                )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}