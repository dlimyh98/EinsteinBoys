{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\n// Each input will have it's own COMPONENT level state, not APP level state\nimport { useState } from 'react';\nimport moment from 'moment'; // AddText function catches onAdd Prop, that was passed in by App.js\n// AddText has it's own onSubmitFunction, that triggers when onSubmit EVENT triggers.\n// State Variables here MUST share the same name as State Variables in App.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddText = function ({\n  onAdd\n}) {\n  _s();\n\n  const [text, setText] = useState('');\n  let [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n  const [priority, setPriority] = useState(0); // Logic when User clicks 'Submit'\n\n  const onSubmitFunction = function (e) // Input is the Event currently happening (which will be the event that triggers onSubmit)\n  {\n    e.preventDefault(); // Prevents submission to a new webpage\n    // Pop-up if User did not enter Text, and clicked submit\n\n    if (!text) {\n      alert('Enter a Task!');\n    } else // If everything ok, capture the data\n      {\n        let isoDay = moment(day, \"DD-MMMM-YYYY hh:mm a A\").toISOString(true); // ISOString, prevent UTC conversion\n\n        day = moment(day, \"DD-MMMM-YYYY hh:mm a A\").toString(); // JSDateString, Date Object\n        // Inputs would have already been captured in Stateful Value (as the User was typing it in), hence just capture that\n\n        onAdd({\n          text,\n          day,\n          isoDay,\n          reminder,\n          priority\n        }); // Clear the form from whatever the User typed in just now\n\n        setText('');\n        setDay('');\n        setReminder(false);\n        setPriority(0);\n      }\n  };\n\n  const handleOptionChange = async changeEvent => {\n    setPriority(Number(changeEvent.target.value)); // Cast to Number, target.value is in String\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: onSubmitFunction,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What needs to be done?\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Date and Time (Strictly follow format below!) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"1 June 2021 7:00 am\",\n        value: day,\n        onChange: e => setDay(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control form-control-check\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Reminders? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"Reminders\",\n        value: reminder,\n        checked: reminder // Iff reminder is true, then box will be checked\n        ,\n        onChange: e => setReminder(e.currentTarget.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"priorityRadio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Priority \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"3\",\n          checked: priority === 3,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \"High Priority Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"2\",\n          checked: priority === 2,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), \"Medium Priority Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"1\",\n          checked: priority === 1,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), \"Low Priority Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"0\",\n          checked: priority === 0,\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), \"Event\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save Task\",\n      className: \"btn btn-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddText, \"I/t3HUP5ozc0jsOTqu3Oe/tKvgQ=\");\n\n_c = AddText;\nexport default AddText;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddText\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/AddTask.js"],"names":["useState","moment","AddText","onAdd","text","setText","day","setDay","reminder","setReminder","priority","setPriority","onSubmitFunction","e","preventDefault","alert","isoDay","toISOString","toString","handleOptionChange","changeEvent","Number","target","value","currentTarget","checked"],"mappings":"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","sourcesContent":["// Each input will have it's own COMPONENT level state, not APP level state\nimport {useState} from 'react'\nimport moment from 'moment'\n\n// AddText function catches onAdd Prop, that was passed in by App.js\n// AddText has it's own onSubmitFunction, that triggers when onSubmit EVENT triggers.\n// State Variables here MUST share the same name as State Variables in App.js\nconst AddText = function( {onAdd} )\n{\n    const[text, setText] = useState('')\n    let [day, setDay] = useState('')\n    const[reminder, setReminder] = useState(false)\n    const[priority, setPriority] = useState(0)\n\n\n    // Logic when User clicks 'Submit'\n    const onSubmitFunction = function(e)    // Input is the Event currently happening (which will be the event that triggers onSubmit)\n    {\n        e.preventDefault()  // Prevents submission to a new webpage\n\n        // Pop-up if User did not enter Text, and clicked submit\n        if (!text)\n        {\n            alert('Enter a Task!')\n        }\n        else   // If everything ok, capture the data\n        {\n            let isoDay = (moment(day, \"DD-MMMM-YYYY hh:mm a A\")).toISOString(true)  // ISOString, prevent UTC conversion\n            day = (moment(day, \"DD-MMMM-YYYY hh:mm a A\")).toString()                           // JSDateString, Date Object\n\n            // Inputs would have already been captured in Stateful Value (as the User was typing it in), hence just capture that\n            onAdd({text, day, isoDay, reminder, priority})\n\n            // Clear the form from whatever the User typed in just now\n            setText('')\n            setDay('')\n            setReminder(false)\n            setPriority(0)\n        }\n    }\n\n    const handleOptionChange = async (changeEvent) => {\n        setPriority(Number(changeEvent.target.value))    // Cast to Number, target.value is in String\n    }\n\n    return(\n        <form className = 'add-form' onSubmit = {onSubmitFunction}>\n\n            <div className = 'form-control'>\n                <label> Task </label>\n                <input type = 'text'\n                       placeholder = 'What needs to be done?'\n                       value = {text}\n                       onChange = { (e) => setText(e.target.value) }\n                />\n            </div>\n\n            <div className = 'form-control'>\n                <label> Date and Time (Strictly follow format below!) </label>\n                <input type='text'\n                       placeholder = '1 June 2021 7:00 am'\n                       value = {day}\n                       onChange = { (e) => setDay(e.target.value) }\n                />\n            </div>\n\n            <div className = 'form-control form-control-check'>  {/* Input multiple classes by using Quotations, can use String Template also */}\n                <label> Reminders? </label>\n                <input type='checkbox'\n                       name='Reminders'\n                       value = {reminder}\n                       checked = {reminder} // Iff reminder is true, then box will be checked\n                       onChange = { (e) => setReminder(e.currentTarget.checked) }\n                />\n            </div>\n\n            <div className= 'priorityRadio'>\n                <h3> Priority </h3>\n                <label>\n                    <input\n                        type = 'radio'\n                        value = '3'\n                        checked = {priority === 3}\n                        onChange = {handleOptionChange}\n                    />\n                    High Priority Task\n                </label>\n                <label>\n                    <input\n                        type = 'radio'\n                        value = '2'\n                        checked = {priority === 2}\n                        onChange = {handleOptionChange}\n                    />\n                    Medium Priority Task\n                </label>\n                <label>\n                    <input\n                        type = 'radio'\n                        value = '1'\n                        checked = {priority === 1}\n                        onChange = {handleOptionChange}\n                    />\n                    Low Priority Task\n                </label>\n                <label>\n                    <input\n                        type = 'radio'\n                        value = '0'\n                        checked = {priority === 0}\n                        onChange = {handleOptionChange}\n                    />\n                    Event\n                </label>\n            </div>\n\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddText"]},"metadata":{},"sourceType":"module"}