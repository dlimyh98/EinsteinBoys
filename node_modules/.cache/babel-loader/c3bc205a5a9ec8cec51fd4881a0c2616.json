{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Tasks.js\";\nimport Task from './Task';\nimport Sort from './Sort'; // Destructuring tasks passed in from App.js\n// Destructuring onDelete passed in from App.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = function ({\n  tasks,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: //tasks.map(                  /* For each index in tasks Object Array, run the function defined below on each index*/\n    tasks.sort((a, b) => {\n      if (a.priority > b.priority) return -1;\n      if (a.priority < b.priority) return;\n    }).map((task, index) =>\n    /*#__PURE__*/\n\n    /* task is the 'val' argument for .map function. If only one value in argument, it will be val */\n\n    /* Function returns a user-defined Task Component */\n    _jsxDEV(Task, {\n      /* Store each task.id into key variable */\n      task: task\n      /* Pass in task as Prop into Task.js, using variable task */\n      ,\n      onDelete: onDelete\n      /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Tasks.js"],"names":["Task","Sort","Tasks","tasks","onDelete","sort","a","b","priority","map","task","index"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;;;;;AACA,MAAMC,KAAK,GAAG,UAAU;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAV,EACd;AACI,sBACI;AAAA,cAEQ;AACAD,IAAAA,KAAK,CAACE,IAAN,CACI,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACN,UAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B,OAAO,CAAC,CAAR;AAC7B,UAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EAA6B;AAChC,KAJL,EAKKC,GALL,CAMI,CAACC,IAAD,EAAOC,KAAP;AAAA;;AAAwB;;AACpB;AACA,YAAC,IAAD;AACwB;AACpB,MAAA,IAAI,EAAED;AAAc;AAFxB;AAGI,MAAA,QAAQ,EAAEN;AAAU;;AAHxB,OACSO,KADT;AAAA;AAAA;AAAA;AAAA,YARR;AAHR,mBADJ;AAsBH,CAxBD;;KAAMT,K;AA0BN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\nimport Sort from './Sort'\n\n// Destructuring tasks passed in from App.js\n// Destructuring onDelete passed in from App.js\nconst Tasks = function( {tasks, onDelete} )\n{\n    return (\n        <>\n            {\n                //tasks.map(                  /* For each index in tasks Object Array, run the function defined below on each index*/\n                tasks.sort(\n                    (a, b) => {\n                        if (a.priority > b.priority) return -1\n                        if (a.priority < b.priority) return \n                    })\n                    .map(\n                    (task, index) => (      /* task is the 'val' argument for .map function. If only one value in argument, it will be val */\n                        /* Function returns a user-defined Task Component */\n                        <Task\n                            key={index}         /* Store each task.id into key variable */\n                            task={task}         /* Pass in task as Prop into Task.js, using variable task */\n                            onDelete={onDelete} /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n                        />\n                    )\n                )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}