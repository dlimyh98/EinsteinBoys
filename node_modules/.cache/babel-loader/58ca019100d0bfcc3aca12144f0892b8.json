{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Tasks.js\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = function ({\n  tasks,\n  onDelete,\n  togglePriority\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.sort((a, b, togglePriority) => {\n      console.log(togglePriority);\n\n      if (togglePriority) {\n        if (a.priority > b.priority) return -1;else return 0;\n      } else {\n        return 0;\n      }\n    }).map( // For each index in tasks Object Array, run the function defined below on each index\n    (task, index) =>\n    /*#__PURE__*/\n    // task is the 'val' argument for .map function. If only one value in argument, it will be val\n    // Function returns a user-defined Task Component\n    _jsxDEV(Task, {\n      /* Store each task.id into key variable */\n      task: task\n      /* Pass in task as Prop into Task.js, using variable task */\n      ,\n      onDelete: onDelete\n      /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this))\n  }, void 0, false);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Tasks.js"],"names":["Task","Tasks","tasks","onDelete","togglePriority","sort","a","b","console","log","priority","map","task","index"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,KAAK,GAAG,UAAU;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAV,EAA6C;AACvD,sBACI;AAAA,cAEQF,KAAK,CAACG,IAAN,CACI,CAACC,CAAD,EAAIC,CAAJ,EAAOH,cAAP,KAA0B;AACtBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;;AACA,UAAIA,cAAJ,EAAoB;AAAE,YAAIE,CAAC,CAACI,QAAF,GAAaH,CAAC,CAACG,QAAnB,EAA6B,OAAO,CAAC,CAAR,CAA7B,KAA8C,OAAO,CAAP;AAAS,OAA7E,MACK;AAAC,eAAO,CAAP;AAAS;AAClB,KALL,EAMKC,GANL,EAMgC;AACxB,KAACC,IAAD,EAAOC,KAAP;AAAA;AAAwB;AACpB;AACA,YAAC,IAAD;AACwB;AACpB,MAAA,IAAI,EAAED;AAAc;AAFxB;AAGI,MAAA,QAAQ,EAAET;AAAU;;AAHxB,OACSU,KADT;AAAA;AAAA;AAAA;AAAA,YATZ;AAFR,mBADJ;AAsBH,CAvBD;;KAAMZ,K;AAyBN,eAAeA,KAAf","sourcesContent":["import Task from './Task'\n\nconst Tasks = function ({tasks, onDelete, togglePriority}) {\n    return (\n        <>\n            {\n                tasks.sort(\n                    (a, b, togglePriority) => {\n                        console.log(togglePriority)\n                        if (togglePriority) { if (a.priority > b.priority) return -1 ; else return 0}\n                        else {return 0}\n                    })\n                    .map(                       // For each index in tasks Object Array, run the function defined below on each index\n                        (task, index) => (      // task is the 'val' argument for .map function. If only one value in argument, it will be val\n                            // Function returns a user-defined Task Component\n                            <Task\n                                key={index}         /* Store each task.id into key variable */\n                                task={task}         /* Pass in task as Prop into Task.js, using variable task */\n                                onDelete={onDelete} /* Pass in onDelete as Prop into Task.js, using variable onDelete*/\n                            />\n                        )\n                    )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}