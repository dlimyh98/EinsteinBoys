{"ast":null,"code":"import{FaTimes}from'react-icons/fa';// Importing Icons from installed React Icons Library. Restart npm server after installing!\n// Destructuring task, that was passed in as Prop from Tasks.js\n// Destructuring onDelete, that was passed in as Prop from Tasks.js\n/* Events are stored in App.js, so how to modify the component when we click on it?\n- We could access the State within our components, if we were using Redux/Context\n- Alternatively, we could use Props. Send down a function as a Prop, then fire that function off here in Task.js\n  State gets passed down, Actions get passed up\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Task=function Task(_ref){var task=_ref.task,onDelete=_ref.onDelete,toggleReminder=_ref.toggleReminder;return/*#__PURE__*/_jsxs(\"div\",{/* first className is task */ /* second classname is using template literals (backticks) */className:\"task \".concat(task.reminder?'reminder':' '),onDoubleClick:function onDoubleClick(){return toggleReminder(task.id);}/* onDoubleClick on div, not header (Button) */,children:[/*#__PURE__*/_jsxs(\"h3\",{children:[task.text,/*#__PURE__*/_jsx(FaTimes,{style:{color:'red',cursor:'pointer'}/* Use double braces for Style */,onClick:function onClick(){return onDelete(task.id);}/* Pass in the task.id as well! */ /* onClick will cause onDelete to work it's way up to App.js, where it will call deleteTask */})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",task.day,\" \"]})]});};export default Task;","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Task.js"],"names":["FaTimes","Task","task","onDelete","toggleReminder","reminder","id","text","color","cursor","day"],"mappings":"AACA,OAAQA,OAAR,KAAsB,gBAAtB,CAAwC;AAExC;AACA;AAEA;AACA;AACA;AACA;AACA,G,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MACb,IADuBC,CAAAA,IACvB,MADuBA,IACvB,CAD6BC,QAC7B,MAD6BA,QAC7B,CADuCC,cACvC,MADuCA,cACvC,CACI,mBACI,aACI,6BADJ,CAEI,6DACA,SAAS,gBAAcF,IAAI,CAACG,QAAL,CAAgB,UAAhB,CAA6B,GAA3C,CAHb,CAII,aAAa,CAAK,+BAAMD,CAAAA,cAAc,CAAEF,IAAI,CAACI,EAAP,CAApB,EAAqC,+CAJ3D,wBAMI,sBACKJ,IAAI,CAACK,IADV,cAEI,KAAC,OAAD,EACI,KAAK,CAAI,CAAEC,KAAK,CAAG,KAAV,CAAiBC,MAAM,CAAG,SAA1B,CAAwC,iCADrD,CAEI,OAAO,CAAK,yBAAMN,CAAAA,QAAQ,CAACD,IAAI,CAACI,EAAN,CAAd,EAAsC,kCAFtD,CAGI,8FAHJ,EAFJ,GANJ,cAcI,yBAAKJ,IAAI,CAACQ,GAAV,OAdJ,GADJ,CAkBH,CApBD,CAsBA,cAAeT,CAAAA,IAAf","sourcesContent":["\nimport {FaTimes} from 'react-icons/fa'  // Importing Icons from installed React Icons Library. Restart npm server after installing!\n\n// Destructuring task, that was passed in as Prop from Tasks.js\n// Destructuring onDelete, that was passed in as Prop from Tasks.js\n\n/* Events are stored in App.js, so how to modify the component when we click on it?\n- We could access the State within our components, if we were using Redux/Context\n- Alternatively, we could use Props. Send down a function as a Prop, then fire that function off here in Task.js\n  State gets passed down, Actions get passed up\n */\n\nconst Task = function({task, onDelete, toggleReminder})\n{\n    return(\n        <div\n            /* first className is task */\n            /* second classname is using template literals (backticks) */\n            className = { `task ${ task.reminder ? 'reminder' : ' '}`}\n            onDoubleClick = { () => toggleReminder((task.id)) }    /* onDoubleClick on div, not header (Button) */\n        >\n            <h3>\n                {task.text}\n                <FaTimes\n                    style = {{ color : 'red', cursor : 'pointer'}}   /* Use double braces for Style */\n                    onClick = { () => onDelete(task.id) }             /* Pass in the task.id as well! */\n                    /* onClick will cause onDelete to work it's way up to App.js, where it will call deleteTask */\n                />\n            </h3>\n            <p> {task.day} </p>\n        </div>\n    )\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}