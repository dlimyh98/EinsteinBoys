{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/Header.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// JSX return is wrapped in (), and remember that it can only return one Parent Element\nconst Header = function (props) {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \".btn\",\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}; // What are you exposing to others that import this file?\n\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/Header.js"],"names":["Header","props"],"mappings":";;;AAAA;AAEA,MAAMA,MAAM,GAAG,UAASC,KAAT,EACf;AACI,sBACI;AAAQ,IAAA,SAAS,EAAG,QAApB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CARD,C,CAUA;;;KAVMD,M;AAWN,eAAeA,MAAf","sourcesContent":["// JSX return is wrapped in (), and remember that it can only return one Parent Element\n\nconst Header = function(props)\n{\n    return (\n        <header className = 'header'>\n            <h1> Task Tracker</h1>\n            <button className = '.btn'> Add </button>\n        </header>\n    )\n}\n\n// What are you exposing to others that import this file?\nexport default Header"]},"metadata":{},"sourceType":"module"}