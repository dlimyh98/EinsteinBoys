{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/components/AddTask.js\",\n    _s = $RefreshSig$();\n\n// Each input will have it's own COMPONENT level state, not APP level state\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = function () {\n  _s();\n\n  const [task, setTask] = useState(' ');\n  const [date, addDate] = useState(' ');\n  const [reminder, addReminder] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Task\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Task\",\n        placeholder: \"Add Tasks\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Date\",\n        placeholder: \"Enter Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control form-control-check\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Reminders\",\n        children: \"Reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"Reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save Task\",\n      className: \"btn btn-block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"JPThc+448TDV8RfjFghky516kbM=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/components/AddTask.js"],"names":["useState","AddTask","task","setTask","date","addDate","reminder","addReminder","e","target","value"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,OAAO,GAAG,YAChB;AAAA;;AACI,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,GAAD,CAA/B;AACA,QAAK,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,GAAD,CAA/B;AACA,QAAK,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAvC;AAEA,sBACI;AAAM,IAAA,SAAS,EAAG,UAAlB;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAG,MAAd;AACO,QAAA,IAAI,EAAG,MADd;AAEO,QAAA,WAAW,EAAG,WAFrB;AAGO,QAAA,QAAQ,EAAMQ,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAHlC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,IAAI,EAAC,MADZ;AAEO,QAAA,WAAW,EAAG;AAFrB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAwBI;AAAK,MAAA,SAAS,EAAG,iCAAjB;AAAA,oCACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eA+BI;AAAO,MAAA,IAAI,EAAG,QAAd;AAAuB,MAAA,KAAK,EAAG,WAA/B;AAA2C,MAAA,SAAS,EAAG;AAAvD;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAzCD;;GAAMT,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["// Each input will have it's own COMPONENT level state, not APP level state\nimport {useState} from 'react'\n\nconst AddTask = function()\n{\n    const[task, setTask] = useState(' ')\n    const[date, addDate] = useState(' ')\n    const[reminder, addReminder] = useState(false)\n\n    return(\n        <form className = 'add-form'>\n\n            <div className = 'form-control'>\n                <label htmlFor = 'Task'>\n                    Task\n                </label>\n                <input type = 'text'\n                       name = 'Task'\n                       placeholder = 'Add Tasks'\n                       onChange = { (e) => setTask(e.target.value) }\n                />\n            </div>\n\n            <div className = 'form-control'>\n                <label htmlFor='Date'>\n                    Date\n                </label>\n                <input type='text'\n                       name='Date'\n                       placeholder = 'Enter Date'\n                       \n                />\n            </div>\n\n            <div className = 'form-control form-control-check'>  {/* Input multiple classes by using Quotations, can use String Template also */}\n                <label htmlFor='Reminders'>\n                    Reminders\n                </label>\n                <input type='checkbox' name='Reminders'/>\n            </div>\n\n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask"]},"metadata":{},"sourceType":"module"}