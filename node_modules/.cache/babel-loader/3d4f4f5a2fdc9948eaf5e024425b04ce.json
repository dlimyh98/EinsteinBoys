{"ast":null,"code":"var _jsxFileName = \"/Users/Damien/tasktracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react'; // Components can be Functions (with hooks) or Classes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // App (Global) State.\n  // Not best practice, will use Redux to keep track of JS States in future\n  // tasks is RETURNED stateful value\n  // setTasks is name of Function, to change State. Reusable in different contexts\n  // initialize useState to default value as seen below\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2.30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 4th at 1.30pm',\n    reminder: false\n  }]); // Function to add Task\n\n  const addTask = TaskAdded => {}; // Function to toggle Reminders on Task\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(ReminderTasks => ReminderTasks.id === id ? { ...ReminderTasks,\n      reminder: !ReminderTasks.reminder // Rest Operator\n\n    } : ReminderTasks));\n  }; // Function to delete Task (known as deleteTask in Tasks.js / Task.js, since that is what we called it as a Prop)\n\n\n  const deleteTask = id => // Arrow Notation, taking in id as input\n  {\n    setTasks(tasks.filter(FilteredTask => FilteredTask.id !== id));\n  }; // Return is JSX, not HTML\n  // Can only return one single Parent Element\n\n  /* Pass in deleteTask function as Prop, to Tasks.js\n     - Tasks.js contains Task.js\n     - Task.js contains the button itself, that is the trigger point for deletion\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), tasks.length !== 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks\n      /* Passing in tasks as Prop */\n      ,\n      onDelete: deleteTask\n      /* Passing in deleteTask (FUNCTION) as Prop, into variable onDelete */\n      ,\n      toggleReminder: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this) : 'No Tasks Today!']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9LGttmyruzOqdTAF44SCHEtENpI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Damien/tasktracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","tasks","setTasks","id","text","day","reminder","addTask","TaskAdded","toggleReminder","map","ReminderTasks","deleteTask","filter","FilteredTask","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA;AAEI;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAC/B;AACII,IAAAA,EAAE,EAAG,CADT;AAEIC,IAAAA,IAAI,EAAG,qBAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAG;AAJf,GAD+B,EAQ/B;AACIH,IAAAA,EAAE,EAAG,CADT;AAEIC,IAAAA,IAAI,EAAG,mBAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAG;AAJf,GAR+B,CAAD,CAAlC,CARW,CAyBX;;AACA,QAAMC,OAAO,GAAIC,SAAD,IAChB,CAEC,CAHD,CA1BW,CA+BX;;;AACA,QAAMC,cAAc,GAAIN,EAAD,IACvB;AACID,IAAAA,QAAQ,CAAED,KAAK,CAACS,GAAN,CACLC,aAAD,IACIA,aAAa,CAACR,EAAd,KAAqBA,EAArB,GACI,EACI,GAAGQ,aADP;AACsBL,MAAAA,QAAQ,EAAG,CAACK,aAAa,CAACL,QADhD,CAC4D;;AAD5D,KADJ,GAGQK,aALN,CAAF,CAAR;AAQH,GAVD,CAhCW,CA4CX;;;AACA,QAAMC,UAAU,GAAIT,EAAD,IAAW;AAC9B;AACID,IAAAA,QAAQ,CAAED,KAAK,CAACY,MAAN,CAAeC,YAAD,IAAkBA,YAAY,CAACX,EAAb,KAAoBA,EAApD,CAAF,CAAR;AACH,GAHD,CA7CW,CAkDb;AACA;;AAEA;AACF;AACA;AACA;;;AACE,sBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIOF,KAAK,CAACc,MAAN,KAAiB,CAAjB,gBAEQ,QAAC,KAAD;AACI,MAAA,KAAK,EAAId;AAAe;AAD5B;AAEI,MAAA,QAAQ,EAAIW;AAAY;AAF5B;AAGI,MAAA,cAAc,EAAIH;AAHtB;AAAA;AAAA;AAAA;AAAA,YAFR,GASI,iBAbX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3EQT,G;;KAAAA,G;AA6ET,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport {useState} from 'react'\n\n// Components can be Functions (with hooks) or Classes\nfunction App() {\n\n// App (Global) State.\n// Not best practice, will use Redux to keep track of JS States in future\n\n    // tasks is RETURNED stateful value\n    // setTasks is name of Function, to change State. Reusable in different contexts\n    // initialize useState to default value as seen below\n    const [tasks, setTasks] = useState([\n        {\n            id : 1,\n            text : 'Doctors Appointment',\n            day : 'Feb 5th at 2.30pm',\n            reminder : true,\n        },\n\n        {\n            id : 2,\n            text : 'Meeting at School',\n            day : 'Feb 4th at 1.30pm',\n            reminder : false,\n        }\n    ]\n    )\n\n    // Function to add Task\n    const addTask = (TaskAdded) =>\n    {\n\n    }\n\n    // Function to toggle Reminders on Task\n    const toggleReminder = (id) =>\n    {\n        setTasks( tasks.map(\n            (ReminderTasks) => (\n                ReminderTasks.id === id ?\n                    {\n                        ...ReminderTasks, reminder : !ReminderTasks.reminder    // Rest Operator\n                    } : ReminderTasks\n            )\n        ))\n    }\n\n    // Function to delete Task (known as deleteTask in Tasks.js / Task.js, since that is what we called it as a Prop)\n    const deleteTask = (id) =>    // Arrow Notation, taking in id as input\n    {\n        setTasks( tasks.filter( (FilteredTask) => FilteredTask.id !== id ) )\n    }\n\n  // Return is JSX, not HTML\n  // Can only return one single Parent Element\n\n  /* Pass in deleteTask function as Prop, to Tasks.js\n     - Tasks.js contains Task.js\n     - Task.js contains the button itself, that is the trigger point for deletion\n   */\n  return (\n    <div className = 'container'>\n        <AddTask/>\n        <Header/>\n        {\n           tasks.length !== 0 ?\n               (\n                   <Tasks\n                       tasks = {tasks}         /* Passing in tasks as Prop */\n                       onDelete = {deleteTask} /* Passing in deleteTask (FUNCTION) as Prop, into variable onDelete */\n                       toggleReminder = {toggleReminder}\n                   />\n               )\n               :\n               'No Tasks Today!'\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}